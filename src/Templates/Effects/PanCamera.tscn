[gd_scene load_steps=3 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Area2D

export (String, FILE) var interaction_script

onready var root_node := self.get_parent().get_parent().get_parent()

# Dialogue handler 
func talk() -> void:
	# Talk if the character has dialogue
	if (interaction_script):
		global.set_can_talk(false)
		MSG.start_dialogue(interaction_script, self)
	else: 
		print('No dialogue available for the character')
	# Some space to add dynamic events here
	#yield(global, 'dialogue_finished')
	
func pan_out(amount:= 150, time:=1.5) -> void:
	print(\"Panning\")
	get_node(\"PanOut\").interpolate_property(global.get_player().get_node(\"Camera2D\"), \"offset:y\", global.get_player().get_node(\"Camera2D\").offset.y, amount, time, Tween.TRANS_LINEAR, Tween.EASE_IN)
	get_node(\"PanOut\").start()


func _on_InteractableArea_area_entered(area: Area2D) -> void:
	if area.get_parent() as KinematicBody2D:
		if area.get_parent().name == global.current_player_name:
			pan_out(-410, 1)


func _on_PanCamera_area_exited(area: Area2D) -> void:
	if area.get_parent() as KinematicBody2D:
		if area.get_parent().name == global.current_player_name:
			pan_out(0, 1.5)
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 13.8014, 263.153 )

[node name="PanCamera" type="Area2D"]
position = Vector2( 1966.6, 1009.8 )
scale = Vector2( 8.92147, -0.176442 )
monitorable = false
script = SubResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
scale = Vector2( 2.41862, -1.36485 )
shape = SubResource( 2 )

[node name="PanOut" type="Tween" parent="."]
[connection signal="area_entered" from="." to="." method="_on_InteractableArea_area_entered"]
[connection signal="area_exited" from="." to="." method="_on_PanCamera_area_exited"]
